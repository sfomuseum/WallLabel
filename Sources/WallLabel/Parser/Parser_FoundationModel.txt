import FoundationModels
import Foundation

import Logging

@available(iOS 26.0, macOS 26.0, *)
struct FoundationModelParser: Parser {
    
    var instructions: String
    var logger: Logger?
    
    init(parser_uri: String, instructions: String, logger: Logger?) throws {
        self.instructions = instructions
        self.logger = logger
    }
    
    func parse(text: String) async -> Result<WallLabel, any Error> {
        
        var label = WallLabelGenerable(text)
        label.timestamp = Int(NSDate().timeIntervalSince1970)
        label.latitude = 0.0
        label.longitude = 0.0
        
            do {

                let session = LanguageModelSession(instructions: self.instructions)
                
                let response = try await session.respond(
                    to: text,
                    generating: WallLabelGenerable.self
                )
                
                label.title = response.content.title
                label.date = response.content.date
                label.creator = response.content.creator
                label.location = response.content.location
                label.accession_number = response.content.accession_number
                label.medium = response.content.medium
                label.creditline = response.content.creditline
                
                // End of make this a WallLabel method
                
                return .success(label)

            } catch {
                return .failure(error)
            }

    }
    
    
    
}
